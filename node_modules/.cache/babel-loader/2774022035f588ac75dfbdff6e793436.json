{"ast":null,"code":"var _jsxFileName = \"/Users/vadimgevdi/Desktop/todo 2/my-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  let {\n    todo,\n    index,\n    removeTodo,\n    completeTodo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todo.isComplited ? 'line-through' : ''\n    },\n    children: [todo.text, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeTodo(index),\n        children: \" X \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTodo(index),\n        children: \" X \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Todo;\n\nfunction TodoForm(_ref2) {\n  _s();\n\n  let {\n    addTodo\n  } = _ref2;\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Todos...\",\n      className: \"input\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"7FPsFOH2pkDF4pQkrnl/qGXpmTU=\");\n\n_c2 = TodoForm;\n\nfunction App() {\n  _s2();\n\n  const [todos, setTodos] = React.useState([{\n    text: 'React',\n    isComplited: false\n  }, {\n    text: 'React',\n    isComplited: false\n  }, {\n    text: 'React',\n    isComplited: false\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isComplited = true;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n        index: index,\n        todo: todo,\n        removeTodo: removeTodo,\n        completeTodo: completeTodo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"OK4heF8MJyxmevb7vRkLVUwRVn8=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/vadimgevdi/Desktop/todo 2/my-app/src/App.js"],"names":["React","Todo","todo","index","removeTodo","completeTodo","textDecoration","isComplited","text","TodoForm","addTodo","value","setValue","useState","handleSubmit","event","preventDefault","e","target","App","todos","setTodos","newTodos","splice","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nfunction Todo ( { todo, index, removeTodo, completeTodo } ){\n  return(\n    <div \n      className=\"todo\"\n      style={{ textDecoration: todo.isComplited ? 'line-through' : ''}}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}> X </button>\n        <button onClick={() => removeTodo(index)}> X </button>\n      </div>\n    </div>\n  );\n}\n\n\nfunction TodoForm ( { addTodo } ){\n  const [ value, setValue ] = React.useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  }\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input \n        type='text'\n        placeholder='Todos...'\n        className=\"input\"\n        value={value}\n        onChange={ e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\n\nfunction App () {\n  const [ todos, setTodos ] = React.useState([\n    {\n      text: 'React',\n      isComplited: false,\n    },\n    {\n      text: 'React',\n      isComplited: false,\n    },\n    {\n      text: 'React',\n      isComplited: false,\n    },\n  ])\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  } \n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  }\n\n  const completeTodo = index => {\n    const newTodos= [...todos];\n    newTodos[index].isComplited = true;\n    setTodos(newTodos);\n  }\n\n\n  return(\n    <div className=\"app\">\n      <h1>Todo</h1>\n      <div className=\"todo-list\">\n        {todos.map(( todo, index ) => (\n          <Todo \n            index={index}\n            key={index}\n            todo={todo}\n            removeTodo={removeTodo}\n            completeTodo={completeTodo}\n          />\n        ))}\n        <TodoForm \n          addTodo={addTodo}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}